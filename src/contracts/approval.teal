#pragma version 8
txn NumAppArgs
int 0
==
bnz main_l16
txna ApplicationArgs 0
method "create_challenge(pay)void"
==
bnz main_l15
txna ApplicationArgs 0
method "accept_challenge(pay)void"
==
bnz main_l14
txna ApplicationArgs 0
method "play(string)address"
==
bnz main_l13
txna ApplicationArgs 0
method "getplayer1()address"
==
bnz main_l12
txna ApplicationArgs 0
method "getplayer2()address"
==
bnz main_l11
txna ApplicationArgs 0
method "rw(account,account)uint64"
==
bnz main_l10
txna ApplicationArgs 0
method "reveal(account,account)void"
==
bnz main_l9
err
main_l9:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub revealcaster_19
int 1
return
main_l10:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub rwcaster_18
int 1
return
main_l11:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub getplayer2caster_17
int 1
return
main_l12:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub getplayer1caster_16
int 1
return
main_l13:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub playcaster_15
int 1
return
main_l14:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub acceptchallengecaster_14
int 1
return
main_l15:
txn OnCompletion
int NoOp
==
txn ApplicationID
int 0
!=
&&
assert
callsub createchallengecaster_13
int 1
return
main_l16:
txn OnCompletion
int NoOp
==
bnz main_l22
txn OnCompletion
int OptIn
==
bnz main_l21
txn OnCompletion
int CloseOut
==
bnz main_l20
err
main_l20:
int 1
return
main_l21:
txn ApplicationID
int 0
!=
assert
int 1
return
main_l22:
txn ApplicationID
int 0
==
assert
int 1
return

// reset_round
resetround_0:
proto 2 0
frame_dig -2
byte "localplay"
byte ""
app_local_put
frame_dig -2
byte "localplay"
byte ""
app_local_put
frame_dig -1
byte "localplay"
byte ""
app_local_put
frame_dig -1
byte "localplay"
byte ""
app_local_put
byte "round"
byte "round"
app_global_get
int 1
-
app_global_put
retsub

// reset_all
resetall_1:
proto 2 0
frame_dig -2
byte "localplay"
byte ""
app_local_put
frame_dig -2
byte "localplay"
byte ""
app_local_put
frame_dig -1
byte "localplay"
byte ""
app_local_put
frame_dig -1
byte "localplay"
byte ""
app_local_put
byte "round"
int 0
app_global_put
byte "wager"
int 0
app_global_put
byte "player1wins"
int 0
app_global_put
byte "player2wins"
int 0
app_global_put
byte "Draw"
int 0
app_global_put
byte "player1"
byte ""
app_global_put
byte "player2"
byte ""
app_global_put
retsub

// create_challenge
createchallenge_2:
proto 1 0
frame_dig -1
gtxns TypeEnum
int pay
==
frame_dig -1
gtxns Receiver
global CurrentApplicationAddress
==
&&
frame_dig -1
gtxns CloseRemainderTo
global ZeroAddress
==
&&
frame_dig -1
gtxns Sender
global CurrentApplicationID
app_opted_in
&&
assert
byte "player1"
frame_dig -1
gtxns Sender
app_global_put
byte "wager"
frame_dig -1
gtxns Amount
app_global_put
byte "round"
int 3
app_global_put
byte "player1wins"
int 0
app_global_put
byte "player2wins"
int 0
app_global_put
byte "Draw"
int 0
app_global_put
int 1
return

// accept_challenge
acceptchallenge_3:
proto 1 0
frame_dig -1
gtxns TypeEnum
int pay
==
frame_dig -1
gtxns Receiver
global CurrentApplicationAddress
==
&&
frame_dig -1
gtxns CloseRemainderTo
global ZeroAddress
==
&&
frame_dig -1
gtxns Sender
global CurrentApplicationID
app_opted_in
&&
byte "wager"
app_global_get
frame_dig -1
gtxns Amount
==
&&
assert
byte "player2"
frame_dig -1
gtxns Sender
app_global_put
byte "round"
int 3
app_global_put
byte "player1wins"
int 0
app_global_put
byte "player2wins"
int 0
app_global_put
byte "Draw"
int 0
app_global_put
int 1
return

// play
play_4:
proto 1 1
byte ""
txn Sender
global CurrentApplicationID
app_opted_in
assert
txn Sender
byte "player1"
app_global_get
==
bnz play_4_l3
txn Sender
byte "player2"
app_global_get
==
bz play_4_l4
txn Sender
byte "localplay"
frame_dig -1
extract 2 0
app_local_put
byte "player1"
app_global_get
frame_bury 0
frame_dig 0
len
int 32
==
assert
b play_4_l4
play_4_l3:
txn Sender
byte "localplay"
frame_dig -1
extract 2 0
app_local_put
byte "player2"
app_global_get
frame_bury 0
frame_dig 0
len
int 32
==
assert
play_4_l4:
byte "player1"
app_global_get
frame_bury 0
frame_dig 0
len
int 32
==
assert
int 1
return

// getplayer1
getplayer1_5:
proto 0 1
byte ""
byte "player1"
app_global_get
frame_bury 0
frame_dig 0
len
int 32
==
assert
retsub

// getplayer2
getplayer2_6:
proto 0 1
byte ""
byte "player2"
app_global_get
frame_bury 0
frame_dig 0
len
int 32
==
assert
retsub

// play_value
playvalue_7:
proto 1 1
frame_dig -1
base64_decode StdEncoding
byte "r"
==
bnz playvalue_7_l6
frame_dig -1
base64_decode StdEncoding
byte "p"
==
bnz playvalue_7_l5
frame_dig -1
base64_decode StdEncoding
byte "s"
==
bnz playvalue_7_l4
err
playvalue_7_l4:
int 2
b playvalue_7_l7
playvalue_7_l5:
int 1
b playvalue_7_l7
playvalue_7_l6:
int 0
playvalue_7_l7:
retsub

// winner
winner_8:
proto 2 0
frame_dig -2
frame_dig -1
==
bnz winner_8_l6
frame_dig -2
int 1
+
int 3
%
frame_dig -1
==
bnz winner_8_l5
frame_dig -1
int 1
+
int 3
%
frame_dig -2
==
bnz winner_8_l4
err
winner_8_l4:
byte "player1wins"
byte "player1wins"
app_global_get
int 1
+
app_global_put
b winner_8_l7
winner_8_l5:
byte "player2wins"
byte "player2wins"
app_global_get
int 1
+
app_global_put
b winner_8_l7
winner_8_l6:
byte "Draw"
byte "Draw"
app_global_get
int 1
+
app_global_put
winner_8_l7:
retsub

// round_winner
roundwinner_9:
proto 2 1
frame_dig -2
frame_dig -1
==
bnz roundwinner_9_l6
frame_dig -2
int 1
+
int 3
%
frame_dig -1
==
bnz roundwinner_9_l5
frame_dig -1
int 1
+
int 3
%
frame_dig -2
==
bnz roundwinner_9_l4
err
roundwinner_9_l4:
int 1
b roundwinner_9_l7
roundwinner_9_l5:
int 2
b roundwinner_9_l7
roundwinner_9_l6:
int 0
roundwinner_9_l7:
retsub

// send_rewards
sendrewards_10:
proto 2 0
itxn_begin
int pay
itxn_field TypeEnum
frame_dig -2
itxn_field Receiver
frame_dig -1
itxn_field Amount
itxn_submit
retsub

// rw
rw_11:
proto 2 1
int 0
frame_dig -2
txnas Accounts
byte "localplay"
app_local_get
callsub playvalue_7
frame_dig -1
txnas Accounts
byte "localplay"
app_local_get
callsub playvalue_7
callsub roundwinner_9
frame_bury 0
retsub

// reveal
reveal_12:
proto 2 0
txn Sender
byte "player1"
app_global_get
==
bz reveal_12_l8
frame_dig -2
txnas Accounts
byte "localplay"
app_local_get
callsub playvalue_7
frame_dig -1
txnas Accounts
byte "localplay"
app_local_get
callsub playvalue_7
callsub winner_8
byte "Draw"
app_global_get
int 2
>=
byte "round"
app_global_get
int 1
==
&&
byte "Draw"
app_global_get
int 1
==
byte "round"
app_global_get
int 1
==
&&
byte "player1wins"
app_global_get
int 1
==
&&
byte "player2wins"
app_global_get
int 1
==
&&
||
bnz reveal_12_l7
byte "player1wins"
app_global_get
int 2
>=
byte "round"
app_global_get
int 1
==
&&
bnz reveal_12_l6
byte "player2wins"
app_global_get
int 2
>=
byte "round"
app_global_get
int 1
==
&&
bnz reveal_12_l5
frame_dig -2
txnas Accounts
frame_dig -1
txnas Accounts
callsub resetround_0
b reveal_12_l8
reveal_12_l5:
frame_dig -1
txnas Accounts
byte "wager"
app_global_get
int 2
*
byte "wager"
app_global_get
int 2
*
int 12
*
int 100
/
-
callsub sendrewards_10
frame_dig -2
txnas Accounts
frame_dig -1
txnas Accounts
callsub resetall_1
b reveal_12_l8
reveal_12_l6:
frame_dig -2
txnas Accounts
byte "wager"
app_global_get
int 2
*
byte "wager"
app_global_get
int 2
*
int 12
*
int 100
/
-
callsub sendrewards_10
frame_dig -2
txnas Accounts
frame_dig -1
txnas Accounts
callsub resetall_1
b reveal_12_l8
reveal_12_l7:
frame_dig -2
txnas Accounts
byte "wager"
app_global_get
byte "wager"
app_global_get
int 12
*
int 100
/
-
callsub sendrewards_10
frame_dig -1
txnas Accounts
byte "wager"
app_global_get
byte "wager"
app_global_get
int 12
*
int 100
/
-
callsub sendrewards_10
frame_dig -2
txnas Accounts
frame_dig -1
txnas Accounts
callsub resetall_1
reveal_12_l8:
int 1
return

// create_challenge_caster
createchallengecaster_13:
proto 0 0
int 0
txn GroupIndex
int 1
-
frame_bury 0
frame_dig 0
gtxns TypeEnum
int pay
==
assert
frame_dig 0
callsub createchallenge_2
retsub

// accept_challenge_caster
acceptchallengecaster_14:
proto 0 0
int 0
txn GroupIndex
int 1
-
frame_bury 0
frame_dig 0
gtxns TypeEnum
int pay
==
assert
frame_dig 0
callsub acceptchallenge_3
retsub

// play_caster
playcaster_15:
proto 0 0
byte ""
dup
txna ApplicationArgs 1
frame_bury 1
frame_dig 1
callsub play_4
frame_bury 0
byte 0x151f7c75
frame_dig 0
concat
log
retsub

// getplayer1_caster
getplayer1caster_16:
proto 0 0
byte ""
callsub getplayer1_5
frame_bury 0
byte 0x151f7c75
frame_dig 0
concat
log
retsub

// getplayer2_caster
getplayer2caster_17:
proto 0 0
byte ""
callsub getplayer2_6
frame_bury 0
byte 0x151f7c75
frame_dig 0
concat
log
retsub

// rw_caster
rwcaster_18:
proto 0 0
int 0
dupn 2
txna ApplicationArgs 1
int 0
getbyte
frame_bury 1
txna ApplicationArgs 2
int 0
getbyte
frame_bury 2
frame_dig 1
frame_dig 2
callsub rw_11
frame_bury 0
byte 0x151f7c75
frame_dig 0
itob
concat
log
retsub

// reveal_caster
revealcaster_19:
proto 0 0
int 0
dup
txna ApplicationArgs 1
int 0
getbyte
frame_bury 0
txna ApplicationArgs 2
int 0
getbyte
frame_bury 1
frame_dig 0
frame_dig 1
callsub reveal_12
retsub